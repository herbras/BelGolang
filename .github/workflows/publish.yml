name: Build and Publish NPM Package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          
      - name: Install dependencies
        run: go mod download
        
      - name: Run tests
        run: go test ./...
        
      - name: Create bin directory structure
        run: |
          mkdir -p npm-package/bin/{darwin-x64,darwin-arm64,linux-x64,linux-arm64,win32-x64,win32-arm64}
          
      - name: Build binaries for all platforms
        run: |
          # macOS
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o npm-package/bin/darwin-x64/salat .
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o npm-package/bin/darwin-arm64/salat .
          
          # Linux
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o npm-package/bin/linux-x64/salat .
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o npm-package/bin/linux-arm64/salat .
          
          # Windows
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o npm-package/bin/win32-x64/salat.exe .
          GOOS=windows GOARCH=arm64 go build -ldflags="-s -w" -o npm-package/bin/win32-arm64/salat.exe .
          
      - name: Build WASM
        run: |
          # Build WebAssembly module
          GOOS=js GOARCH=wasm go build -ldflags="-s -w" -o wasm/salat.wasm ./cmd/wasm
          
          # Copy Go WASM exec helper
          cp "$(go env GOROOT)/misc/wasm/wasm_exec.js" wasm/
          
      - name: Make binaries executable
        run: |
          chmod +x npm-package/bin/*/salat
          
      - name: Copy package files
        run: |
          echo 'MIT' > npm-package/LICENSE
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Publish to NPM
        run: |
          cd npm-package
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            npm-package/bin/**/*
            wasm/salat.wasm
            wasm/salat.js
            wasm/wasm_exec.js
          body_path: npm-package/README.md
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}